//=============================================================================
// Brief   : Binding Cache
// Authors : Bruno Santos <bsantos@av.it.pt>
// ----------------------------------------------------------------------------
// OPMIP - Open Proxy Mobile IP
//
// Copyright (C) 2010 Universidade de Aveiro
// Copyrigth (C) 2010 Instituto de Telecomunicações - Pólo de Aveiro
//
// This software is distributed under a license. The full license
// agreement can be found in the file LICENSE in this distribution.
// This software may not be copied, modified, sold or distributed
// other than expressed in the named license agreement.
//
// This software is distributed without any warranty.
//=============================================================================

#ifndef OPMIP_BCACHE__HPP_
#define OPMIP_BCACHE__HPP_

///////////////////////////////////////////////////////////////////////////////
#include <opmip/base.hpp>
#include <netinet/in.h>
#include <string>
#include <vector>
#include <list>

///////////////////////////////////////////////////////////////////////////////
namespace opmip {

enum link_type {
	link_unknown = 0, ///Unknown Link Layer
	link_802_11  = 1, ///WiFi 802.11 Link Layer
};

struct ip6_address : ::in6_addr {
};

struct ip6_prefix {
	uint8 prefix[16];
	uint8 length;
};

struct mac_address {
	uint8 address[16];
	uint8 length;
};

///////////////////////////////////////////////////////////////////////////////
class bcache {
	class value;

public:
};

class bcache::value {
	friend class bcache;

public:
	typedef ip6_address           net_address;
	typedef ip6_prefix            net_prefix;
	typedef std::list<net_prefix> net_prefix_list;
	typedef std::string           net_access_id;
	typedef std::vector<uint8>    link_id;
	typedef mac_address           link_address;
	typedef uint                  tunnel_id;

	value()
	{ }

private:
//	rbtree_node _bcache_entry_hook;
//	list_node   _cache_policy_hook;

protected:
	net_address      _mn_home_addr;     ///MN Home Address
	net_address      _mn_care_of_addr;  ///MN Care of Address
	net_access_id    _mn_id;            ///MN Identifier
	link_id          _mn_link_id;       ///MN Link Identifier
	link_address     _mag_pp_link_addr; ///MAG P-to-P Local Link Address generated by the LMA after accepting the initial PBU
	uint64           _lifetime;         ///Remaining lifetime of this entry from last binding update
	bool             _is_home_reg;      ///Home registration flag
	bool             _is_proxy_reg;     ///Proxy registration flag
	uint16           _sequence_num;     ///Sequence Number from last binding update, see also section 9.5.1
	net_prefix_list  _net_prefixes;     ///MN List of Network Prefixes
	tunnel_id        _tunnel;           ///Tunnel Identifier
	link_type        _mn_link_type;     ///MN Link-Layer Technology
	uint64           _bu_timestamp;     ///Last BU Timestamp
};

///////////////////////////////////////////////////////////////////////////////
} /* namespace opmip */

///////////////////////////////////////////////////////////////////////////////
#endif /* OPMIP_BCACHE__HPP_ */
